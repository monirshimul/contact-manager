{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/Header.js","components/pages/About.js","components/pages/notFound.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","console","log","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","contactt","className","name","onClick","style","cursor","paddingLeft","float","bind","Link","to","marginRight","email","phone","Contacts","Fragment","contaact","contacts_Contact","Header","branding","href","defaultProps","About","notFound","TextInputGroup","_ref","label","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layouts_TextInputGroup","EditContact","updateContact","match","params","put","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layouts_Header","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e9a58289.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Your Component Has been Updated....\");\r\n  }\r\n  // for requesting rest api,,,with mongodb\r\n  // componentDidMount() {\r\n  //   axios.get(\"http://localhost:3002/getPerson\").then(res =>\r\n  //     this.setState({\r\n  //       contacts: res.data\r\n  //     })\r\n  //   );\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contactt } = this.props;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h5 className=\"text-secondary\">\r\n                {contactt.name}\r\n                <i\r\n                  onClick={() => {\r\n                    this.setState({ showContactInfo: !showContactInfo });\r\n                  }}\r\n                  className=\"fas fa-sort-down text-info\"\r\n                  style={{ cursor: \"pointer\", paddingLeft: \"10px\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times text-info\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    float: \"right\"\r\n                  }}\r\n                  onClick={this.onDeleteClick.bind(this, contactt.id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${contactt.id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt text-info\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h5>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group text-secondary\">\r\n                  <li className=\"list-group-item\">Email: {contactt.email}</li>\r\n                  <li className=\"list-group-item\">Phone: {contactt.phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contactt: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n\r\n// \"editor.formatOnSave\": true,\r\n// \"emmet.excludeLanguages\": [\"markdown\"],\r\n// \"emmet.includeLanguages\": {\r\n//   \"javascript\": \"javascriptreact\"\r\n// },\r\n// \"emmet.syntaxProfiles\": {\r\n//   \"javascript\": \"jsx\",\r\n//   \"javascript\": \"html\"\r\n// }\r\n// }\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-info\"> Contact </span>\r\n                List\r\n              </h1>\r\n              {contacts.map(contaact => (\r\n                <Contact key={contaact.id} contactt={contaact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { branding } = this.props;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-secondary mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">\r\n            <h1>\r\n              <i className=\"fab fa-pied-piper text-info\" /> {branding}\r\n            </h1>\r\n          </a>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  <i className=\"fas fa-home text-info\" /> Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                  <i className=\"fas fa-plus text-info\" /> Add\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                  <i className=\"fas fa-question text-info\" /> About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4 text-info\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contact</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n//<h1 className=\"display-4\">{props.match.params.id}</h1>\r\n","import React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  type,\r\n  onChange,\r\n  className,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>\r\n        <h5 className=\"text-info\">\r\n          <i className={className} /> {label}\r\n        </h5>\r\n      </label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  className: PropTypes.string.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    const { name, email, phone } = this.state;\r\n    //Input Validations\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //for clear the input field...these fields are part of this state.\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header bg bg-secondary \">\r\n                <h2 className=\"text-white text-center\">\r\n                  <i className=\"far fa-address-card text-info\" /> Add Contact\r\n                </h2>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    className=\"fas fa-user-tie text-info\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    className=\"fas fa-envelope text-info\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    className=\"fas fa-mobile-alt text-info\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-outline-info\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    const { name, email, phone } = this.state;\r\n    //Input Validations\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //for clear the input field...these fields are part of this state.\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header bg bg-secondary \">\r\n                <h2 className=\"text-white text-center\">\r\n                  <i className=\"far fa-address-card text-info\" /> Edit Contact\r\n                </h2>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    className=\"fas fa-user-tie text-info\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    className=\"fas fa-envelope text-info\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    className=\"fas fa-mobile-alt text-info\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-outline-info\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\n\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n//import Contact from \"./components/Contact\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layouts/Header\";\nimport About from \"./components/pages/About\";\nimport notFound from \"./components/pages/notFound\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Test from \"./components/test/Test\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Provider } from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"LOGO\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={notFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n"],"sourceRoot":""}